name: PlatformIO CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        example: [examples/CLI, examples/Task]
        environment: [native, ttgo-lora32]
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: compile-cache
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install PlatformIO
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      - name: Checkout code
        uses: actions/checkout@v3
      - name: build CI
        run: platformio ci -c platformio.ini -l src -e ${{ matrix.environment }} ${{ matrix.example }}

  formatting-check:
    name: Formatting Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run clang-format style check for C/C++ programs.
        uses: jidicula/clang-format-action@v4.10.2
        with:
          clang-format-version: '14'
          check-path: src
          
  cppcheck:
    name: Run cppcheck
    runs-on: ubuntu-latest
    strategy:
      matrix:
        environment: [native, ttgo-lora32]
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: check-cache
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install PlatformIO
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run PlatformIO Check
        run: platformio check --fail-on-defect high --fail-on-defect medium --fail-on-defect low -e ${{ matrix.environment }}

  native_unittesting:
    name: Run unit tests on native
    runs-on: ubuntu-latest
    steps:
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/pip
            ~/.platformio/.cache
          key: check-cache
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install PlatformIO
        shell: bash
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      - name: Checkout code
        uses: actions/checkout@v3
      - name: Run unit tests on native
        run: platformio test --environment native

  hw_testing:
    name: Hardware Testing
    runs-on: ubuntu-latest
    steps:
      - uses: convictional/trigger-workflow-and-wait@v1.6.5
        with:
          owner: peterus
          repo: ESP-Boards
          github_token: ${{ secrets.GITHUB_PERSONAL_ACCESS_TOKEN }}
          workflow_file_name: ESPos.yml
          github_user: peterus
